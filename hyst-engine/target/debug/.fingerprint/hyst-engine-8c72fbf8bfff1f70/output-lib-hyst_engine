{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `std`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":15143,"byte_end":15158,"line_start":503,"line_end":503,"column_start":20,"column_end":35,"is_primary":true,"text":[{"text":"        #[cfg_attr(feature = \"std\", derive(Debug, Hash))]","highlight_start":20,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":14081,"byte_end":14575,"line_start":466,"line_end":482,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        bitmask! {","highlight_start":9,"highlight_end":19},{"text":"            pub","highlight_start":1,"highlight_end":16},{"text":"            st_meta: [ $(#[$st_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            st_name: $st_name,","highlight_start":1,"highlight_end":31},{"text":"            mask_type: $T,","highlight_start":1,"highlight_end":27},{"text":"            en_meta: [ $(#[$en_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            en_name: $en_name,","highlight_start":1,"highlight_end":31},{"text":"            flags: [","highlight_start":1,"highlight_end":21},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    meta: [ $(#[$flag_attr])* ]","highlight_start":1,"highlight_end":48},{"text":"                    flag: $flag_name = $flag_value;","highlight_start":1,"highlight_end":52},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"                meta: [ $(#[$next_attr])* ]","highlight_start":1,"highlight_end":44},{"text":"                flag: $next_name = $next_value;","highlight_start":1,"highlight_end":48},{"text":"                []","highlight_start":1,"highlight_end":19},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":13026,"byte_end":13543,"line_start":429,"line_end":446,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        bitmask! {","highlight_start":9,"highlight_end":19},{"text":"            pub","highlight_start":1,"highlight_end":16},{"text":"            st_meta: [ $(#[$st_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            st_name: $st_name,","highlight_start":1,"highlight_end":31},{"text":"            mask_type: $T,","highlight_start":1,"highlight_end":27},{"text":"            en_meta: [ $(#[$en_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            en_name: $en_name,","highlight_start":1,"highlight_end":31},{"text":"            flags: [","highlight_start":1,"highlight_end":21},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    meta: [ $(#[$flag_attr])* ]","highlight_start":1,"highlight_end":48},{"text":"                    flag: $flag_name = $flag_value;","highlight_start":1,"highlight_end":52},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"                meta: [ $(#[$next_attr])* ]","highlight_start":1,"highlight_end":44},{"text":"                flag: $next_name = $next_value;","highlight_start":1,"highlight_end":48},{"text":"                []","highlight_start":1,"highlight_end":19},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            $($token)*","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":13026,"byte_end":13543,"line_start":429,"line_end":446,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        bitmask! {","highlight_start":9,"highlight_end":19},{"text":"            pub","highlight_start":1,"highlight_end":16},{"text":"            st_meta: [ $(#[$st_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            st_name: $st_name,","highlight_start":1,"highlight_end":31},{"text":"            mask_type: $T,","highlight_start":1,"highlight_end":27},{"text":"            en_meta: [ $(#[$en_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            en_name: $en_name,","highlight_start":1,"highlight_end":31},{"text":"            flags: [","highlight_start":1,"highlight_end":21},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    meta: [ $(#[$flag_attr])* ]","highlight_start":1,"highlight_end":48},{"text":"                    flag: $flag_name = $flag_value;","highlight_start":1,"highlight_end":52},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"                meta: [ $(#[$next_attr])* ]","highlight_start":1,"highlight_end":44},{"text":"                flag: $next_name = $next_value;","highlight_start":1,"highlight_end":48},{"text":"                []","highlight_start":1,"highlight_end":19},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            $($token)*","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":11190,"byte_end":11477,"line_start":362,"line_end":373,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        bitmask! {","highlight_start":9,"highlight_end":19},{"text":"            pub","highlight_start":1,"highlight_end":16},{"text":"            st_meta: [ $(#[$st_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            st_name: $st_name,","highlight_start":1,"highlight_end":31},{"text":"            mask_type: $T,","highlight_start":1,"highlight_end":27},{"text":"            en_meta: [ $(#[$en_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            en_name: $en_name,","highlight_start":1,"highlight_end":31},{"text":"            flags: [","highlight_start":1,"highlight_end":21},{"text":"                []","highlight_start":1,"highlight_end":19},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            $($token)+","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/rendering/shaders/mod.rs","byte_start":93,"byte_end":604,"line_start":6,"line_end":33,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitmask! {","highlight_start":1,"highlight_end":11},{"text":"    pub mask ShaderRenderMethod:u8 where flags ShaderRenderingStyle {","highlight_start":1,"highlight_end":70},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        //Type","highlight_start":1,"highlight_end":15},{"text":"        PointList = 0,","highlight_start":1,"highlight_end":23},{"text":"        LineList = 1,","highlight_start":1,"highlight_end":22},{"text":"        LineStrip = 2,","highlight_start":1,"highlight_end":23},{"text":"        TriangleList = 3,","highlight_start":1,"highlight_end":26},{"text":"        TriangleStrip = 4,","highlight_start":1,"highlight_end":27},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        //Cw = 0 << 3,","highlight_start":1,"highlight_end":23},{"text":"        Ccw = 1 << 3,","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        //Front = 0 << 4,","highlight_start":1,"highlight_end":26},{"text":"        Back = 1 << 4,","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        //Fill = 0 << 5,","highlight_start":1,"highlight_end":25},{"text":"        Line = 1 << 5,","highlight_start":1,"highlight_end":23},{"text":"        Point = 2 << 5","highlight_start":1,"highlight_end":23},{"text":"        /*","highlight_start":1,"highlight_end":11},{"text":"        PPFDTT","highlight_start":1,"highlight_end":15},{"text":"        T = Type","highlight_start":1,"highlight_end":17},{"text":"        D = Direction","highlight_start":1,"highlight_end":22},{"text":"        F = Face","highlight_start":1,"highlight_end":17},{"text":"        P = Polygon Mode","highlight_start":1,"highlight_end":25},{"text":"        */","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitmask!","def_site_span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":6308,"byte_end":6328,"line_start":197,"line_end":197,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! bitmask {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"bitmask!","def_site_span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":6308,"byte_end":6328,"line_start":197,"line_end":197,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! bitmask {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"bitmask!","def_site_span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":6308,"byte_end":6328,"line_start":197,"line_end":197,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! bitmask {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"bitmask!","def_site_span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":6308,"byte_end":6328,"line_start":197,"line_end":197,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! bitmask {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"bitmask!","def_site_span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":6308,"byte_end":6328,"line_start":197,"line_end":197,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! bitmask {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `bitmask` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `bitmask` may come from an old version of the `bitmask` crate, try updating your dependency with `cargo update -p bitmask`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `std`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering/shaders/mod.rs:6:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mbitmask! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub mask ShaderRenderMethod:u8 where flags ShaderRenderingStyle {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try referring to `bitmask` crate for guidance on how handle this unexpected cfg\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the macro `bitmask` may come from an old version of the `bitmask` crate, try updating your dependency with `cargo update -p bitmask`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `bitmask` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `std`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":15460,"byte_end":15475,"line_start":513,"line_end":513,"column_start":20,"column_end":35,"is_primary":true,"text":[{"text":"        #[cfg_attr(feature = \"std\", derive(Debug, Hash))]","highlight_start":20,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":14081,"byte_end":14575,"line_start":466,"line_end":482,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        bitmask! {","highlight_start":9,"highlight_end":19},{"text":"            pub","highlight_start":1,"highlight_end":16},{"text":"            st_meta: [ $(#[$st_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            st_name: $st_name,","highlight_start":1,"highlight_end":31},{"text":"            mask_type: $T,","highlight_start":1,"highlight_end":27},{"text":"            en_meta: [ $(#[$en_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            en_name: $en_name,","highlight_start":1,"highlight_end":31},{"text":"            flags: [","highlight_start":1,"highlight_end":21},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    meta: [ $(#[$flag_attr])* ]","highlight_start":1,"highlight_end":48},{"text":"                    flag: $flag_name = $flag_value;","highlight_start":1,"highlight_end":52},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"                meta: [ $(#[$next_attr])* ]","highlight_start":1,"highlight_end":44},{"text":"                flag: $next_name = $next_value;","highlight_start":1,"highlight_end":48},{"text":"                []","highlight_start":1,"highlight_end":19},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":13026,"byte_end":13543,"line_start":429,"line_end":446,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        bitmask! {","highlight_start":9,"highlight_end":19},{"text":"            pub","highlight_start":1,"highlight_end":16},{"text":"            st_meta: [ $(#[$st_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            st_name: $st_name,","highlight_start":1,"highlight_end":31},{"text":"            mask_type: $T,","highlight_start":1,"highlight_end":27},{"text":"            en_meta: [ $(#[$en_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            en_name: $en_name,","highlight_start":1,"highlight_end":31},{"text":"            flags: [","highlight_start":1,"highlight_end":21},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    meta: [ $(#[$flag_attr])* ]","highlight_start":1,"highlight_end":48},{"text":"                    flag: $flag_name = $flag_value;","highlight_start":1,"highlight_end":52},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"                meta: [ $(#[$next_attr])* ]","highlight_start":1,"highlight_end":44},{"text":"                flag: $next_name = $next_value;","highlight_start":1,"highlight_end":48},{"text":"                []","highlight_start":1,"highlight_end":19},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            $($token)*","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":13026,"byte_end":13543,"line_start":429,"line_end":446,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        bitmask! {","highlight_start":9,"highlight_end":19},{"text":"            pub","highlight_start":1,"highlight_end":16},{"text":"            st_meta: [ $(#[$st_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            st_name: $st_name,","highlight_start":1,"highlight_end":31},{"text":"            mask_type: $T,","highlight_start":1,"highlight_end":27},{"text":"            en_meta: [ $(#[$en_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            en_name: $en_name,","highlight_start":1,"highlight_end":31},{"text":"            flags: [","highlight_start":1,"highlight_end":21},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    meta: [ $(#[$flag_attr])* ]","highlight_start":1,"highlight_end":48},{"text":"                    flag: $flag_name = $flag_value;","highlight_start":1,"highlight_end":52},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"                meta: [ $(#[$next_attr])* ]","highlight_start":1,"highlight_end":44},{"text":"                flag: $next_name = $next_value;","highlight_start":1,"highlight_end":48},{"text":"                []","highlight_start":1,"highlight_end":19},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            $($token)*","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":11190,"byte_end":11477,"line_start":362,"line_end":373,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        bitmask! {","highlight_start":9,"highlight_end":19},{"text":"            pub","highlight_start":1,"highlight_end":16},{"text":"            st_meta: [ $(#[$st_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            st_name: $st_name,","highlight_start":1,"highlight_end":31},{"text":"            mask_type: $T,","highlight_start":1,"highlight_end":27},{"text":"            en_meta: [ $(#[$en_attr])* ],","highlight_start":1,"highlight_end":42},{"text":"            en_name: $en_name,","highlight_start":1,"highlight_end":31},{"text":"            flags: [","highlight_start":1,"highlight_end":21},{"text":"                []","highlight_start":1,"highlight_end":19},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            $($token)+","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/rendering/shaders/mod.rs","byte_start":93,"byte_end":604,"line_start":6,"line_end":33,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitmask! {","highlight_start":1,"highlight_end":11},{"text":"    pub mask ShaderRenderMethod:u8 where flags ShaderRenderingStyle {","highlight_start":1,"highlight_end":70},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        //Type","highlight_start":1,"highlight_end":15},{"text":"        PointList = 0,","highlight_start":1,"highlight_end":23},{"text":"        LineList = 1,","highlight_start":1,"highlight_end":22},{"text":"        LineStrip = 2,","highlight_start":1,"highlight_end":23},{"text":"        TriangleList = 3,","highlight_start":1,"highlight_end":26},{"text":"        TriangleStrip = 4,","highlight_start":1,"highlight_end":27},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        //Cw = 0 << 3,","highlight_start":1,"highlight_end":23},{"text":"        Ccw = 1 << 3,","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        //Front = 0 << 4,","highlight_start":1,"highlight_end":26},{"text":"        Back = 1 << 4,","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        //Fill = 0 << 5,","highlight_start":1,"highlight_end":25},{"text":"        Line = 1 << 5,","highlight_start":1,"highlight_end":23},{"text":"        Point = 2 << 5","highlight_start":1,"highlight_end":23},{"text":"        /*","highlight_start":1,"highlight_end":11},{"text":"        PPFDTT","highlight_start":1,"highlight_end":15},{"text":"        T = Type","highlight_start":1,"highlight_end":17},{"text":"        D = Direction","highlight_start":1,"highlight_end":22},{"text":"        F = Face","highlight_start":1,"highlight_end":17},{"text":"        P = Polygon Mode","highlight_start":1,"highlight_end":25},{"text":"        */","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitmask!","def_site_span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":6308,"byte_end":6328,"line_start":197,"line_end":197,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! bitmask {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"bitmask!","def_site_span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":6308,"byte_end":6328,"line_start":197,"line_end":197,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! bitmask {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"bitmask!","def_site_span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":6308,"byte_end":6328,"line_start":197,"line_end":197,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! bitmask {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"bitmask!","def_site_span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":6308,"byte_end":6328,"line_start":197,"line_end":197,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! bitmask {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"bitmask!","def_site_span":{"file_name":"/home/cycro/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitmask-0.5.0/src/lib.rs","byte_start":6308,"byte_end":6328,"line_start":197,"line_end":197,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! bitmask {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `bitmask` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `bitmask` may come from an old version of the `bitmask` crate, try updating your dependency with `cargo update -p bitmask`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `std`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering/shaders/mod.rs:6:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mbitmask! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub mask ShaderRenderMethod:u8 where flags ShaderRenderingStyle {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try referring to `bitmask` crate for guidance on how handle this unexpected cfg\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the macro `bitmask` may come from an old version of the `bitmask` crate, try updating your dependency with `cargo update -p bitmask`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `bitmask` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `BindGroupEntry`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering/shaders/triangle.rs","byte_start":53,"byte_end":67,"line_start":2,"line_end":2,"column_start":23,"column_end":37,"is_primary":true,"text":[{"text":"use wgpu::{BindGroup, BindGroupEntry, BindGroupLayout, ShaderStages};","highlight_start":23,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rendering/shaders/triangle.rs","byte_start":51,"byte_end":67,"line_start":2,"line_end":2,"column_start":21,"column_end":37,"is_primary":true,"text":[{"text":"use wgpu::{BindGroup, BindGroupEntry, BindGroupLayout, ShaderStages};","highlight_start":21,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BindGroupEntry`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering/shaders/triangle.rs:2:23\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wgpu::{BindGroup, BindGroupEntry, BindGroupLayout, ShaderStages};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `BindGroupLayoutConfig`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering/shaders/triangle.rs","byte_start":152,"byte_end":173,"line_start":5,"line_end":5,"column_start":38,"column_end":59,"is_primary":true,"text":[{"text":"    core::{BindGroupAndLayoutConfig, BindGroupLayoutConfig, RenderingCore},","highlight_start":38,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rendering/shaders/triangle.rs","byte_start":150,"byte_end":173,"line_start":5,"line_end":5,"column_start":36,"column_end":59,"is_primary":true,"text":[{"text":"    core::{BindGroupAndLayoutConfig, BindGroupLayoutConfig, RenderingCore},","highlight_start":36,"highlight_end":59}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BindGroupLayoutConfig`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering/shaders/triangle.rs:5:38\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    core::{BindGroupAndLayoutConfig, BindGroupLayoutConfig, RenderingCore},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `wgpu::RenderPass`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering/shaders/mod.rs","byte_start":74,"byte_end":90,"line_start":4,"line_end":4,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use wgpu::RenderPass;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rendering/shaders/mod.rs","byte_start":70,"byte_end":92,"line_start":4,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use wgpu::RenderPass;","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `wgpu::RenderPass`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering/shaders/mod.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wgpu::RenderPass;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"fields `instance`, `adapter`, and `text_renderer` are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering/core.rs","byte_start":866,"byte_end":879,"line_start":30,"line_end":30,"column_start":12,"column_end":25,"is_primary":false,"text":[{"text":"pub struct RenderingCore {","highlight_start":12,"highlight_end":25}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rendering/core.rs","byte_start":886,"byte_end":894,"line_start":31,"line_end":31,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    instance: Instance,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rendering/core.rs","byte_start":941,"byte_end":948,"line_start":33,"line_end":33,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    adapter: Adapter,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rendering/core.rs","byte_start":1035,"byte_end":1048,"line_start":37,"line_end":37,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    text_renderer: TextRenderer,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: fields `instance`, `adapter`, and `text_renderer` are never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering/core.rs:31:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RenderingCore {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    instance: Instance,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    surface: Surface<'static>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    adapter: Adapter,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    text_renderer: TextRenderer,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"associated constants `TRANSPARENT` and `BLACK` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering/rgba.rs","byte_start":64,"byte_end":73,"line_start":4,"line_end":4,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"impl Rgba {","highlight_start":1,"highlight_end":10}],"label":"associated constants in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rendering/rgba.rs","byte_start":136,"byte_end":147,"line_start":6,"line_end":6,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"    const TRANSPARENT: Rgba = Rgba(0, 0, 0, 0);","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rendering/rgba.rs","byte_start":184,"byte_end":189,"line_start":7,"line_end":7,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    const BLACK: Rgba = Rgba(0, 0, 0, 255);","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constants `TRANSPARENT` and `BLACK` are never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering/rgba.rs:6:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Rgba {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated constants in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const WHITE: Rgba = Rgba(255, 255, 255, 255);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const TRANSPARENT: Rgba = Rgba(0, 0, 0, 0);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const BLACK: Rgba = Rgba(0, 0, 0, 255);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"7 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 7 warnings emitted\u001b[0m\n\n"}
